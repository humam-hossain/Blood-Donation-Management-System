package Main;

import java.awt.Component;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.Scanner;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;


public class RegPage extends javax.swing.JFrame {

    /**
     * Creates new form RegPage
     */
    public RegPage() {
        initComponents();
        connect();
        IDInput.setText(Integer.toString(Variables.ID));
        setTitle("Regestration Page");

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    public void connect() {

        try {
            Variables.myconnectionobj = DriverManager.getConnection("jdbc:derby://localhost:1527/BloodBank1", "admin1", "admin");

        } catch (SQLException ex) {

        }
    }

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        RegPage = new javax.swing.JPanel();
        Name = new javax.swing.JLabel();
        NameInput = new javax.swing.JTextField();
        Sex = new javax.swing.JLabel();
        SexInput = new javax.swing.JComboBox<>();
        DateOfBirth = new javax.swing.JLabel();
        Area = new javax.swing.JLabel();
        AreaInput = new javax.swing.JComboBox<>();
        BloodGroup = new javax.swing.JLabel();
        GroupInput = new javax.swing.JComboBox<>();
        LastDonation = new javax.swing.JLabel();
        MobileNo = new javax.swing.JLabel();
        MobileNumberInput = new javax.swing.JTextField();
        Submit = new javax.swing.JButton();
        Return = new javax.swing.JButton();
        last_date = new javax.swing.JTextField();
        DOB = new javax.swing.JTextField();
        IDInput = new javax.swing.JTextField();
        Nextdonation = new javax.swing.JTextField();
        Check = new javax.swing.JButton();
        Enter_ID_Label = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        RegPage.setPreferredSize(new java.awt.Dimension(766, 630));
        RegPage.setLayout(null);

        Name.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Name.setText("Name:");
        RegPage.add(Name);
        Name.setBounds(30, 100, 244, 26);
        RegPage.add(NameInput);
        NameInput.setBounds(30, 150, 244, 45);

        Sex.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Sex.setText("Sex");
        RegPage.add(Sex);
        Sex.setBounds(30, 210, 244, 24);

        SexInput.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        SexInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Male", "Female" }));
        RegPage.add(SexInput);
        SexInput.setBounds(30, 260, 244, 42);

        DateOfBirth.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        DateOfBirth.setText("Date Of Birth:");
        RegPage.add(DateOfBirth);
        DateOfBirth.setBounds(30, 320, 244, 31);

        Area.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Area.setText("Area");
        RegPage.add(Area);
        Area.setBounds(30, 430, 244, 36);

        AreaInput.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        AreaInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Rampura", "Malibag", "Motijheel", "Uttora", "Mohakhali", "Badda" }));
        AreaInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AreaInputActionPerformed(evt);
            }
        });
        RegPage.add(AreaInput);
        AreaInput.setBounds(30, 480, 244, 40);

        BloodGroup.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        BloodGroup.setText("Blood Group:");
        RegPage.add(BloodGroup);
        BloodGroup.setBounds(410, 10, 205, 36);

        GroupInput.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        GroupInput.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "A+", "A-", "B+", "B-", "AB+", "AB-", "O+", "O-" }));
        GroupInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GroupInputActionPerformed(evt);
            }
        });
        RegPage.add(GroupInput);
        GroupInput.setBounds(410, 70, 149, 44);

        LastDonation.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        LastDonation.setText("Last Date of Donation (YYYY-MM-DD)");
        RegPage.add(LastDonation);
        LastDonation.setBounds(410, 130, 350, 54);

        MobileNo.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        MobileNo.setText("Mobile No:");
        RegPage.add(MobileNo);
        MobileNo.setBounds(410, 270, 284, 33);
        RegPage.add(MobileNumberInput);
        MobileNumberInput.setBounds(410, 330, 284, 45);

        Submit.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Submit.setText("Submit");
        Submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SubmitActionPerformed(evt);
            }
        });
        RegPage.add(Submit);
        Submit.setBounds(250, 570, 110, 50);

        Return.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Return.setText("Return");
        Return.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ReturnActionPerformed(evt);
            }
        });
        RegPage.add(Return);
        Return.setBounds(620, 570, 130, 50);

        last_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                last_dateActionPerformed(evt);
            }
        });
        RegPage.add(last_date);
        last_date.setBounds(410, 200, 284, 44);
        RegPage.add(DOB);
        DOB.setBounds(30, 370, 244, 40);
        RegPage.add(IDInput);
        IDInput.setBounds(30, 60, 244, 33);
        RegPage.add(Nextdonation);
        Nextdonation.setBounds(410, 480, 284, 40);

        Check.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Check.setText("Check");
        Check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CheckActionPerformed(evt);
            }
        });
        RegPage.add(Check);
        Check.setBounds(440, 570, 110, 50);

        Enter_ID_Label.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        Enter_ID_Label.setText("Enter ID");
        RegPage.add(Enter_ID_Label);
        Enter_ID_Label.setBounds(30, 20, 244, 25);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setText("Will be Eligible to Donate Blood");
        RegPage.add(jLabel2);
        jLabel2.setBounds(410, 410, 312, 39);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project/reg_page3.jpg"))); // NOI18N
        RegPage.add(jLabel3);
        jLabel3.setBounds(0, 0, 770, 630);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RegPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(RegPage, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void GroupInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GroupInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_GroupInputActionPerformed

    private void AreaInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AreaInputActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AreaInputActionPerformed

    private void ReturnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ReturnActionPerformed
        // TODO add your handling code here:
        RegPage.setVisible(false);
        FirstPage second = new FirstPage();
        second.setVisible(true);
        dispose();

    }//GEN-LAST:event_ReturnActionPerformed

    boolean Datecheck(String Gdate) {
        Date date = new Date();
        Date date2 = null;

        SimpleDateFormat ft = new SimpleDateFormat("yyyy-MM-dd");

        String User_date = Gdate;

        try {

            date2 = ft.parse(User_date);
        } catch (ParseException e) {
            Component GUI = null;
            JOptionPane.showMessageDialog(GUI, "Unsuccessful. Please try again");
        }
        long diff = date.getTime() - date2.getTime();
        long hours = diff / (60 * 60 * 1000);

        if (hours / 24 >= 120) {
            return true;
        } else {
            return false;
        }
    }
    private void SubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SubmitActionPerformed
        // TODO add your handling code here:
        int flag = 0;
        
        try{  
            String id = IDInput.getText();
            String name = NameInput.getText();
            String sex = (String) SexInput.getSelectedItem();
            String dob = DOB.getText();
            String Ldate = last_date.getText();

            String area = (String) AreaInput.getSelectedItem();
            String bloodgroup = (String) GroupInput.getSelectedItem();

            String number = MobileNumberInput.getText();
            boolean active = Datecheck(Ldate);
            
    Class.forName("com.mysql.jdbc.Driver");  
    Connection con=DriverManager.getConnection("jdbc:mysql://localhost/blooddonation","root","");  
    //here root is username and password  
    PreparedStatement stmt=con.prepareStatement("INSERT INTO `regdoner`(`ID`, `NAME`, `SEX`, `DATE_OF_BIRTH`, `AREA`, `BLOOD_GROUP`, `LAST_DATE_DONATION`, `MOBILE_NO`, `ELIGIBLE_TO_DONATE`) VALUES "
            + "(?,?,?,?,?,?,?,?,?)");  
    stmt.setString(1,id);//1 specifies the first parameter in the query  
    stmt.setString(2,name);  
    stmt.setString(3,sex);  
    stmt.setString(4,dob);
    stmt.setString(7,Ldate);  
    stmt.setString(5,area);
    stmt.setString(6,bloodgroup);
    stmt.setString(8,number);  
    stmt.setString(9,Nextdonation.getText());
    int i=stmt.executeUpdate();  
    System.out.println(i+" records inserted");  
    con.close(); 
    /*
    Statement stmt=con.createStatement();  
    ResultSet rs=stmt.executeQuery("select * from regdoner");  
    while(rs.next())  
    System.out.println(rs.getString(1)+"  "+rs.getString(2)+"  "+rs.getString(3));  
    con.close();  
    */
    }catch(Exception e){ 
        System.out.println(e);
    }  
     
       /* try {

            String id = IDInput.getText();
            String name = NameInput.getText();
            String sex = (String) SexInput.getSelectedItem();
            String dob = DOB.getText();
            String Ldate = last_date.getText();

            String area = (String) AreaInput.getSelectedItem();
            String bloodgroup = (String) GroupInput.getSelectedItem();

            String number = MobileNumberInput.getText();
            boolean active = Datecheck(Ldate);

            PreparedStatement add = Variables.myconnectionobj.prepareStatement("insert Into ADMIN1.BLOODINFO values (?,?,?,?,?,?,?,?,?,?)");
            add.setString(1, id);
            add.setString(2, name);
            add.setString(3, sex);
            add.setString(4, dob);
            add.setString(5, area);
            add.setString(6, bloodgroup);
            add.setString(7, Ldate);
            add.setString(8, number);
            add.setBoolean(10, active);
            add.setString(9, Variables.Lastdate);
            int row = add.executeUpdate();
            IDInput.setText(" ");
            NameInput.setText(" ");
            Sex.setText(" ");
            last_date.setText(" ");
            MobileNumberInput.setText(" ");
            DOB.setText(" ");
            Nextdonation.setText(" ");
            

        } catch (SQLException e) {
            //e.printStackTrace();
            flag = 1;
        }
        connect();
        if (flag == 0) {

            Component GUI = null;
            JOptionPane.showMessageDialog(GUI, "Successfully Added.");
            Variables.ID++;

        } else {
            Component GUI = null;
            JOptionPane.showMessageDialog(GUI, "Unsuccessful. Please try again");
        }
        */
    }//GEN-LAST:event_SubmitActionPerformed
    void check(String date) {
        String oldDate = date;

        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
        Calendar c = Calendar.getInstance();
        try {

            c.setTime(sdf.parse(oldDate));
        } catch (ParseException e) {
            //e.printStackTrace();
        }

        c.add(Calendar.DAY_OF_MONTH, 120);

        String newDate = sdf.format(c.getTime());
        Variables.Lastdate = newDate;
        Nextdonation.setText(newDate);
    }
    private void CheckActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CheckActionPerformed
        // TODO add your handling code here:
        String Ldate = last_date.getText();
        check(Ldate);
    }//GEN-LAST:event_CheckActionPerformed

    private void last_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_last_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_last_dateActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel Area;
    private javax.swing.JComboBox<String> AreaInput;
    private javax.swing.JLabel BloodGroup;
    private javax.swing.JButton Check;
    private javax.swing.JTextField DOB;
    private javax.swing.JLabel DateOfBirth;
    private javax.swing.JLabel Enter_ID_Label;
    private javax.swing.JComboBox<String> GroupInput;
    private javax.swing.JTextField IDInput;
    private javax.swing.JLabel LastDonation;
    private javax.swing.JLabel MobileNo;
    private javax.swing.JTextField MobileNumberInput;
    private javax.swing.JLabel Name;
    private javax.swing.JTextField NameInput;
    private javax.swing.JTextField Nextdonation;
    private javax.swing.JPanel RegPage;
    private javax.swing.JButton Return;
    private javax.swing.JLabel Sex;
    private javax.swing.JComboBox<String> SexInput;
    private javax.swing.JButton Submit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField last_date;
    // End of variables declaration//GEN-END:variables
}

